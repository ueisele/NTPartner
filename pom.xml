<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>ntpartner</groupId>
	<artifactId>ntpartner-backend</artifactId>
	<version>${describe}</version>
	<packaging>jar</packaging>

	<description>Backend of NtPartner</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.3.RELEASE</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
	</properties>

	<scm>
		<url>https://github.com/ueisele/NTPartner.git</url>
		<connection>scm:git:git@github.com:ueisele/NTPartner.git</connection>
		<developerConnection>scm:git:git@github.com:ueisele/NTPartner.git</developerConnection>
		<tag>${project.version}</tag>
	</scm>

	<dependencies>
		<dependency>
			<groupId>org.springframework.amqp</groupId>
			<artifactId>spring-rabbit</artifactId>
			<version>1.7.2.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-amqp</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-hateoas</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-spring-service-connector</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-localconfig-connector</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-cloudfoundry-connector</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-mockmvc</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<!-- A Spring Boot application is not intended to be used as a dependency 
						(but is by the acceptance tests). Spring Bootâ€™s Maven plugins must be configured 
						to produce a separate artifact that is suitable for use as a dependency. 
						See http://docs.spring.io/spring-boot/docs/1.4.x/reference/htmlsingle/#howto-create-an-additional-executable-jar -->
					<classifier>exec</classifier>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.lukegb.mojo</groupId>
				<artifactId>gitdescribe-maven-plugin</artifactId>
				<version>3.0</version>
				<executions>
					<execution>
						<goals>
							<goal>gitdescribe</goal>
						</goals>
						<id>git-describe</id>
						<phase>initialize</phase>
						<configuration>
							<extraArguments>
								<param>--tags</param>
							</extraArguments>
							<setReactorProjectsProperties>true</setReactorProjectsProperties>
						</configuration>
					</execution>
				</executions>
			</plugin>
            <!--
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.2</version>
				<executions>
					<execution>
						<id>copy-resources-service</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/dist/service</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/docker/service</directory>
								</resource>
								<resource>
									<directory>${basedir}/target</directory>
									<includes>
										<include>*-exec.jar</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			-->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>1.0.0</version>
                <executions>
                    <execution>
                        <id>build-image-service</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <imageName>${project.groupId}/${project.artifactId}</imageName>
                            <imageTags>
                                <imageTag>${project.version}</imageTag>
                                <imageTag>latest</imageTag>
                            </imageTags>
                            <forceTags>true</forceTags>
                            <dockerDirectory>src/main/docker/service</dockerDirectory>
                            <buildDirectory>${project.build.directory}/dist/service</buildDirectory>
                            <resources>
                                <resource>
                                    <targetPath>/</targetPath>
                                    <directory>${project.build.directory}</directory>
                                    <include>${project.build.finalName}-exec.jar</include>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>build-image-setup-mysql</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <imageName>${project.groupId}/${project.artifactId}.setup-mysql</imageName>
                            <imageTags>
                                <imageTag>${project.version}</imageTag>
                                <imageTag>latest</imageTag>
                            </imageTags>
                            <forceTags>true</forceTags>
                            <dockerDirectory>src/main/docker/setup-mysql</dockerDirectory>
                            <buildDirectory>${project.build.directory}/dist/setup-mysql</buildDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>docker-push</id>
			<activation>
				<property>
					<name>dockerRegistry</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>1.0.0</version>
						<executions>
							<execution>
								<id>tag-image-service-version</id>
								<phase>package</phase>
								<goals>
									<goal>tag</goal>
								</goals>
								<configuration>
									<image>${project.groupId}/${project.artifactId}:${project.version}</image>
									<newName>${dockerRegistry}/${project.groupId}/${project.artifactId}:${project.version}</newName>
									<forceTags>true</forceTags>
								</configuration>
							</execution>
							<execution>
								<id>tag-image-service-latest</id>
								<phase>package</phase>
								<goals>
									<goal>tag</goal>
								</goals>
								<configuration>
									<image>${project.groupId}/${project.artifactId}:latest</image>
									<newName>${dockerRegistry}/${project.groupId}/${project.artifactId}:latest</newName>
									<forceTags>true</forceTags>
								</configuration>
							</execution>
							<execution>
								<id>tag-image-setup-mysql-version</id>
								<phase>package</phase>
								<goals>
									<goal>tag</goal>
								</goals>
								<configuration>
									<image>${project.groupId}/${project.artifactId}.setup-mysql:${project.version}</image>
									<newName>${dockerRegistry}/${project.groupId}/${project.artifactId}.setup-mysql:${project.version}</newName>
									<forceTags>true</forceTags>
								</configuration>
							</execution>
							<execution>
								<id>tag-image-setup-mysql-latest</id>
								<phase>package</phase>
								<goals>
									<goal>tag</goal>
								</goals>
								<configuration>
									<image>${project.groupId}/${project.artifactId}.setup-mysql:latest</image>
									<newName>${dockerRegistry}/${project.groupId}/${project.artifactId}.setup-mysql:latest</newName>
									<forceTags>true</forceTags>
								</configuration>
							</execution>

							<execution>
								<id>push-image-service-version</id>
								<phase>install</phase>
								<goals>
									<goal>push</goal>
								</goals>
								<configuration>
									<imageName>${dockerRegistry}/${project.groupId}/${project.artifactId}:${project.version}</imageName>
								</configuration>
							</execution>
							<execution>
								<id>push-image-service-latest</id>
								<phase>install</phase>
								<goals>
									<goal>push</goal>
								</goals>
								<configuration>
									<imageName>${dockerRegistry}/${project.groupId}/${project.artifactId}:latest</imageName>
								</configuration>
							</execution>
							<execution>
								<id>push-image-setup-mysql-version</id>
								<phase>install</phase>
								<goals>
									<goal>push</goal>
								</goals>
								<configuration>
									<imageName>${dockerRegistry}/${project.groupId}/${project.artifactId}.setup-mysql:${project.version}</imageName>
								</configuration>
							</execution>
							<execution>
								<id>push-image-setup-mysql-latest</id>
								<phase>install</phase>
								<goals>
									<goal>push</goal>
								</goals>
								<configuration>
									<imageName>${dockerRegistry}/${project.groupId}/${project.artifactId}.setup-mysql:latest</imageName>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
